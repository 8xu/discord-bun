import {
    Colors,
    EmbedBuilder,
    SlashCommandBuilder,
    bold,
    codeBlock,
    italic,
    type ChatInputCommandInteraction
} from 'discord.js';
import { Premium } from '../../schemas/Premium';

const generateCode = async (): Promise<String> => {
    return Math.random().toString(36).substring(2, 8).toUpperCase();
};

const command: Command<ChatInputCommandInteraction> = {
    data: new SlashCommandBuilder()
        .setName('generate')
        .setDescription('Generates a new premium code')
        .addNumberOption((option) =>
            option
                .setName('quantity')
                .setDescription('The amount of codes to generate')
                .setMinValue(1)
                .setMaxValue(100)
                .setRequired(true)
        ),
    isDevOnly: true,
    execute: async (interaction) => {
        const quantity = interaction.options.getNumber('quantity', false);

        const codes = [];

        for (let i = 0; i < quantity; i++) {
            const code = await generateCode();
            codes.push(code);
        }

        try {
            await Premium.bulkCreate(codes.map((code) => ({ code })));

            const embed = new EmbedBuilder()
                .setTitle('Premium Codes Generated!')
                .setDescription(
                    `Here are your premium codes: \n${codeBlock(codes.join('\n'))}\nTotal: ${bold(codes.length.toString())} code${codes.length === 1 ? '' : 's'}`
                )
                .setColor(Colors.Green)
                .setFooter({
                    text: `Generated by ${interaction.user.tag}`,
                    iconURL: interaction.user.displayAvatarURL()
                })
                .setTimestamp();

            await interaction.reply({
                embeds: [embed],
                ephemeral: true
            });

            return;
        } catch (error) {
            interaction.client.logger.log(
                'error',
                `Failed to create ${quantity} premium code${quantity === 1 ? null : 's'}: ${error}`
            );

            const embed = new EmbedBuilder()
                .setTitle('Error')
                .setDescription(
                    `Failed to create ${italic(quantity.toString())} premium code${quantity === 1 ? null : 's'}`
                )
                .setColor(Colors.Red);

            await interaction.reply({
                embeds: [embed],
                ephemeral: true
            });

            return;
        }
    }
};

export default command;
